.build_esp_adf_unit_test_template: &build_esp_adf_unit_test_template
  <<: *build_template
  artifacts:
    paths:
      - $IDF_PATH/tools/unit-test-app/output
      - $IDF_PATH/components/idf_test/unit_test/TestCaseAll.yml
    expire_in: 4 days
  only:
    variables:
      - $BOT_TRIGGER_WITH_LABEL == null
      - $BOT_LABEL_BUILD
      - $BOT_LABEL_UNIT_TEST
      - $BOT_LABEL_REGULAR_TEST

.add_adf_components_to_ut_make_build: &add_adf_components_to_ut_make_build
  # this step is aim to add adf compoents to build
  sed -i "s%include \$(IDF_PATH)\/make\/project.mk%include \$(ADF_PATH)\/project.mk%g" Makefile

.set_idf_version_and_update: &set_idf_version_and_update
  $ADF_PATH/tools/ci/set_idf.sh ${IDF_VERSION}

.build_esp_adf_tests_make: 
  <<: *build_esp_adf_unit_test_template
  script:
    - export EXTRA_CFLAGS=${PEDANTIC_CFLAGS}
    - export EXTRA_CXXFLAGS=${EXTRA_CFLAGS}
    - *set_idf_version_and_update
    - cd $IDF_PATH/tools/unit-test-app
    - *add_adf_components_to_ut_make_build
    - MAKEFLAGS= make help # make sure kconfig tools are built in single process
    - make ut-clean-all-configs
    - make ut-build-all-configs
    - python $IDF_PATH/tools/UnitTestParser.py
    # Check if the tests demand Make built binaries. If not, delete them
    - if [ "$UNIT_TEST_BUILD_SYSTEM" == "make" ]; then exit 0; fi
    - rm -rf builds output sdkconfig
    - rm $IDF_PATH/components/idf_test/unit_test/TestCaseAll.yml

adf_ut_make_v33:
  extends: .build_esp_adf_tests_make
  variables:
    IDF_VERSION: release/v3.3

adf_ut_make_v40:
  extends: .build_esp_adf_tests_make
  variables:
    IDF_VERSION: release/v4.0

adf_ut_make_v41:
  extends: .build_esp_adf_tests_make
  variables:
    IDF_VERSION: release/v4.1

adf_ut_make_v42:
  extends: .build_esp_adf_tests_make
  variables:
    IDF_VERSION: release/v4.2
